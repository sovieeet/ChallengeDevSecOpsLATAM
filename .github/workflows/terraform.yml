name: Deploy Terraform to GCP

on:
  push:
    branches:
      - main
      - develop
      - feature/*
  pull_request:
    branches:
      - main
      - develop
  workflow_call: {}

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2.1.1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}

      - name: Create ZIP for Cloud Function
        run: |
            cd challengelatam/pubsub
            zip -r ../../terraform/function.zip pubsub.py

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false

      - name: Initialize Terraform
        env:
          TF_VAR_google_credentials: ${{ secrets.GCP_SA_KEY }}
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
        run: cd ./terraform && terraform init

      - name: Import Existing Resources
        env:
          TF_VAR_project_id: ${{ secrets.PROJECT_ID }}
          TF_VAR_google_credentials: ${{ secrets.GCP_SA_KEY }}
          TF_VAR_dataset_id: ${{ secrets.DATASET_ID }}
          TF_VAR_table_id: ${{ secrets.TABLE_ID }}
          TF_VAR_google_service_account_email: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_EMAIL }}
        run: |
          cd ./terraform
          echo "Importing resources into Terraform state..."
          
          DATASET_RESOURCE="google_bigquery_dataset.${DATASET_ID}"
      
          terraform import "$DATASET_RESOURCE" "projects/${TF_VAR_project_id}/datasets/${TF_VAR_dataset_id}" || echo "Dataset already managed by Terraform"
          terraform import google_pubsub_topic.data_ingestion "projects/${TF_VAR_project_id}/topics/data-ingestion" || echo "Topic already managed by Terraform"
          terraform import google_storage_bucket.function_bucket "${TF_VAR_project_id}-function-bucket" || echo "Bucket already managed by Terraform"
          terraform import google_pubsub_subscription.data_ingestion_subscription "projects/${TF_VAR_project_id}/subscriptions/data-ingestion-subscription" || echo "Subscription already managed by Terraform"
          terraform import google_bigquery_table.latam1 "projects/${TF_VAR_project_id}/datasets/${TF_VAR_dataset_id}/tables/latam" || echo "Table already managed by Terraform"
          terraform import google_cloudfunctions_function.pubsub_to_bigquery "${TF_VAR_project_id}/us-central1/pubsub-to-bigquery" || echo "Cloud Function already managed by Terraform"
      

      - name: Terraform Plan
        env:
          TF_VAR_project_id: ${{ secrets.PROJECT_ID }}
          TF_VAR_google_credentials: ${{ secrets.GCP_SA_KEY }}
          TF_VAR_dataset_id: ${{ secrets.DATASET_ID }}
          TF_VAR_table_id: ${{ secrets.TABLE_ID }}
          TF_VAR_region: "us-central1"
          TF_VAR_google_service_account_email: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_EMAIL }}
        run: cd ./terraform && terraform plan

      - name: Terraform Apply
        env:
          TF_VAR_project_id: ${{ secrets.PROJECT_ID }}
          TF_VAR_google_credentials: ${{ secrets.GCP_SA_KEY }}
          TF_VAR_dataset_id: ${{ secrets.DATASET_ID }}
          TF_VAR_table_id: ${{ secrets.TABLE_ID }}
          TF_VAR_region: "us-central1"
          TF_VAR_google_service_account_email: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_EMAIL }}
        run: cd ./terraform && terraform apply -auto-approve

      - name: Confirm completion
        run: echo "Terraform workflow completed successfully."